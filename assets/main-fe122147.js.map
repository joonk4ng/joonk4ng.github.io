{"version":3,"file":"main-fe122147.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/data/defaultData.ts","../../src/utils/pdfFieldMapper.ts","../../src/utils/filenameGenerator.ts","../../node_modules/idb/build/wrap-idb-value.js","../../node_modules/idb/build/index.js","../../src/utils/pdfStorage.ts","../../src/utils/fillCTRPDF.ts","../../src/utils/fillExcelTemplate.ts","../../src/utils/CTRDataService.ts","../../src/components/Notification.tsx","../../src/utils/excelMapping.ts","../../src/utils/timeCalculations.ts","../../src/components/DateCalendar.tsx","../../src/components/StoredPDFs.tsx","../../src/components/MainTable.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","export const defaultData = [\n  {\n    name: 'John Smith',\n    classification: 'FFT1',\n    days: [\n      { date: '2024-06-01', on: '0830', off: '1730' },\n      { date: '2024-06-02', on: '0830', off: '1730' }\n    ]\n  },\n  {\n    name: 'Jane Doe',\n    classification: 'FFT2',\n    days: [\n      { date: '2024-06-01', on: '0830', off: '1730' },\n      { date: '2024-06-02', on: '0830', off: '1730' }\n    ]\n  }\n]; ","// Maps table data to PDF field names as extracted from pdf_fields.csv\nexport function mapToPDFFields(data: any[], crewInfo?: any, signature?: { name: string; signature: string }) {\n  const fields: Record<string, string> = {};\n  \n  // Crew info fields\n  if (crewInfo) {\n    fields['1 CREW NAME'] = crewInfo.crewName || '';\n    fields['2 CREW NUMER'] = crewInfo.crewNumber || '';\n    fields['4FIRE NAME'] = crewInfo.fireName || '';\n    fields['5 FIRE NUMBER'] = crewInfo.fireNumber || '';\n  }\n\n  // Populate DATE and DATE_2 fields from the first row's days if available\n  if (data[0]?.days[0]) {\n    fields['DATE'] = data[0].days[0].date;\n  }\n  if (data[0]?.days[1]) {\n    fields['DATE_2'] = data[0].days[1].date;\n  }\n\n  // Only map rows that have actual data\n  data.forEach((row, idx) => {\n    // Skip rows that don't have a name or classification\n    if (!row?.name && !row?.classification) return;\n\n    const rowNum = idx + 1;\n    \n    // Use the exact field names from your CSV\n    fields[`NAME OF EMPLOYEERow${rowNum}`] = row.name || '';\n    fields[`ClASS IF CATIONRow${rowNum}`] = row.classification || '';\n\n    // Day 1\n    if (row.days?.[0]) {\n      fields[`ONRow${rowNum}`] = row.days[0].on || '';\n      fields[`OFFRow${rowNum}`] = row.days[0].off || '';\n    }\n\n    // Day 2\n    if (row.days?.[1]) {\n      fields[`ONRow${rowNum}_2`] = row.days[1].on || '';\n      fields[`OFFRow${rowNum}_2`] = row.days[1].off || '';\n    }\n  });\n\n  return fields;\n} ","// Store function to generate formatted filenames\n// Initialize ExportInfo object\ninterface ExportInfo {\n  date: string;\n  crewNumber: string;\n  fireName: string;\n  fireNumber: string;\n  type: 'PDF' | 'Excel' | 'CSV';\n}\n\nexport function generateExportFilename(info: ExportInfo): string {\n  const { date, crewNumber, fireName, fireNumber, type } = info;\n  \n  // Format date to YYYY-MM-DD if it's not already\n  const formattedDate = date.includes('-') ? date : new Date(date).toISOString().split('T')[0];\n  \n  // Clean up the values to be filename-safe\n  const safeCrewNumber = crewNumber.replace(/[^a-zA-Z0-9]/g, '');\n  const safeFireName = fireName.replace(/[^a-zA-Z0-9]/g, '');\n  const safeFireNumber = fireNumber.replace(/[^a-zA-Z0-9]/g, '');\n  \n  // Generate the filename\n  const filename = `${formattedDate} ${safeCrewNumber} ${safeFireName} ${safeFireNumber} ${type} CTR`;\n  \n  // Add appropriate extension\n  switch (type) {\n    case 'PDF':\n      return `${filename}.pdf`;\n    case 'Excel':\n      return `${filename}.xlsx`;\n    case 'CSV':\n      return `${filename}.csv`;\n    default:\n      return filename;\n  }\n} ","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { openDB } from 'idb';\n\nconst DB_NAME = 'ctr-pdf-storage';\nconst STORE_NAME = 'pdfs';\nconst DB_VERSION = 1;\n\n// Initialize the database\nasync function initDB() {\n  console.log('Initializing IndexedDB...');\n  return openDB(DB_NAME, DB_VERSION, {\n    upgrade(db) {\n      console.log('Upgrading database...');\n      if (!db.objectStoreNames.contains(STORE_NAME)) {\n        console.log('Creating object store...');\n        db.createObjectStore(STORE_NAME, { keyPath: 'id' });\n      }\n    },\n  });\n}\n\n// Store a PDF in IndexedDB\nexport async function storePDF(pdfBlob: Blob, metadata: {\n  filename: string;\n  date: string;\n  crewNumber: string;\n  fireName: string;\n  fireNumber: string;\n}) {\n  console.log('Storing PDF in IndexedDB...', metadata);\n  const db = await initDB();\n  const id = `${metadata.date}_${metadata.crewNumber}_${metadata.fireName}_${metadata.fireNumber}`;\n  \n  try {\n    await db.put(STORE_NAME, {\n      id,\n      pdf: pdfBlob,\n      metadata,\n      timestamp: new Date().toISOString()\n    });\n    console.log('PDF stored successfully with ID:', id);\n    return id;\n  } catch (error) {\n    console.error('Error storing PDF:', error);\n    throw error;\n  }\n}\n\n// Retrieve a PDF from IndexedDB\nexport async function getPDF(id: string) {\n  console.log('Retrieving PDF from IndexedDB:', id);\n  const db = await initDB();\n  const pdf = await db.get(STORE_NAME, id);\n  console.log('Retrieved PDF:', pdf ? 'Found' : 'Not found');\n  return pdf;\n}\n\n// List all stored PDFs\nexport async function listPDFs() {\n  console.log('Listing all PDFs from IndexedDB...');\n  try {\n    const db = await initDB();\n    console.log('Database initialized successfully');\n    \n    const pdfs = await db.getAll(STORE_NAME);\n    console.log('Found PDFs:', pdfs.length);\n    console.log('PDFs data:', pdfs);\n    \n    return pdfs;\n  } catch (error) {\n    console.error('Error in listPDFs:', error);\n    if (error instanceof Error) {\n      console.error('Error details:', error.message);\n      console.error('Error stack:', error.stack);\n    }\n    throw error;\n  }\n}\n\n// Delete a PDF from IndexedDB\nexport async function deletePDF(id: string) {\n  console.log('Deleting PDF from IndexedDB:', id);\n  const db = await initDB();\n  await db.delete(STORE_NAME, id);\n  console.log('PDF deleted successfully');\n} ","import { PDFDocument } from 'pdf-lib';\nimport { mapToPDFFields } from './pdfFieldMapper';\nimport { generateExportFilename } from './filenameGenerator';\nimport { storePDF } from './pdfStorage';\n\n// Fills the CTR PDF and triggers a download\nexport async function fillCTRPDF(data: any[], crewInfo: any, pdfUrl = '/CTR_Fillable_Edited.pdf') {\n  try {\n    // Add cache-busting query parameter and force network fetch\n    const urlWithCacheBust = `${pdfUrl}?t=${Date.now()}`;\n    const response = await fetch(urlWithCacheBust, {\n      cache: 'no-store', // Force network fetch\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        'Pragma': 'no-cache'\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch PDF: ${response.statusText}`);\n    }\n\n    const pdfBytes = await response.arrayBuffer();\n    const pdfDoc = await PDFDocument.load(pdfBytes);\n\n    const form = pdfDoc.getForm();\n    const fields = mapToPDFFields(data, crewInfo);\n\n    // Debug: Log available form fields\n    console.log('Available PDF form fields:', form.getFields().map(f => f.getName()));\n\n    // Fill fields\n    Object.entries(fields).forEach(([field, value]) => {\n      try {\n        console.log(`Attempting to fill field: ${field} with value: ${value}`);\n        form.getTextField(field).setText(value);\n      } catch (e) {\n        // Field might not exist, skip or log\n        console.warn(`Field ${field} not found in PDF:`, e);\n      }\n    });\n\n    // Save and trigger download\n    const filledPdfBytes = await pdfDoc.save();\n    const blob = new Blob([filledPdfBytes], { type: 'application/pdf' });\n    \n    // Generate filename\n    const filename = generateExportFilename({\n      date: data[0]?.days[0]?.date || new Date().toISOString().split('T')[0],\n      crewNumber: crewInfo.crewNumber || '',\n      fireName: crewInfo.fireName || '',\n      fireNumber: crewInfo.fireNumber || '',\n      type: 'PDF'\n    });\n\n    // Store in IndexedDB\n    await storePDF(blob, {\n      filename,\n      date: data[0]?.days[0]?.date || new Date().toISOString().split('T')[0],\n      crewNumber: crewInfo.crewNumber || '',\n      fireName: crewInfo.fireName || '',\n      fireNumber: crewInfo.fireNumber || ''\n    });\n\n    // Trigger download\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.click();\n    URL.revokeObjectURL(url);\n  } catch (error) {\n    console.error('Error filling PDF:', error);\n    if (error instanceof Error) {\n      throw error;\n    }\n    throw new Error('Failed to generate PDF. Please check your internet connection and try again.');\n  }\n} ","import * as XLSX from 'xlsx';\n\ninterface CrewMember {\n  remarkNumber?: string;\n  name: string;\n  classification: string;\n  days: {\n    date: string;\n    on: string;\n    off: string;\n  }[];\n}\n\ninterface CrewInfo {\n  crewName: string;\n  crewNumber: string;\n  fireName: string;\n  fireNumber: string;\n}\n\ninterface TemplateMapping {\n  // Header Information\n  crewName?: string;      // Cell for crew name\n  crewNumber?: string;    // Cell for crew number\n  fireName?: string;      // Cell for fire name\n  fireNumber?: string;    // Cell for fire number\n  date1?: string;         // Cell for first date\n  date2?: string;         // Cell for second date\n\n  // Data Start Position\n  nameStartRow?: number;  // Starting row for crew member data\n  nameCol?: string;       // Column for names\n  classCol?: string;      // Column for classifications\n  on1Col?: string;        // Column for first day ON times\n  off1Col?: string;       // Column for first day OFF times\n  on2Col?: string;        // Column for second day ON times\n  off2Col?: string;       // Column for second day OFF times\n\n  // Total Hours\n  totalHoursRow?: number; // Row for total hours\n  totalHoursCol?: string; // Column for total hours\n}\n\n// CTR Template Mapping\nconst CTR_TEMPLATE_MAPPING: TemplateMapping = {\n  // Header Information\n  crewName: 'A1',         // Crew Name\n  crewNumber: 'F1',       // Crew Number\n  fireName: 'C2',         // Fire Name\n  fireNumber: 'F2',       // Fire Number\n  date1: 'F4',           // First Date\n  date2: 'H4',           // Second Date\n\n  // Data Start Position\n  nameStartRow: 6,        // Start from row 6\n  nameCol: 'B',          // Names in column B (B6-B25)\n  classCol: 'D',         // Classifications in column D\n  on1Col: 'E',           // First day ON times in column E (E6-E25)\n  off1Col: 'F',          // First day OFF times in column F (F6-F25)\n  on2Col: 'G',           // Second day ON times in column G\n  off2Col: 'H',          // Second day OFF times in column H\n\n  // Total Hours\n  totalHoursRow: 30,     // Total hours in row 30\n  totalHoursCol: 'C'     // Total hours in column C\n};\n\nexport async function fillExcelTemplate(\n  data: any[],\n  crewInfo: any,\n  days: string[],\n  templateUrl = '/CTR_Template.xlsx',\n  mapping: TemplateMapping = CTR_TEMPLATE_MAPPING\n): Promise<XLSX.WorkBook> {\n  try {\n    // Validate input data\n    if (!Array.isArray(data)) {\n      throw new Error('Data must be an array');\n    }\n\n    // Fetch the template\n    const response = await fetch(templateUrl);\n    if (!response.ok) {\n      throw new Error(`Failed to fetch template: ${response.statusText}`);\n    }\n    \n    const templateData = await response.arrayBuffer();\n    const workbook = XLSX.read(templateData, { type: 'array' });\n    const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n\n    // Fill header info\n    if (mapping.crewName) {\n      worksheet[mapping.crewName] = { t: 's', v: crewInfo?.crewName || '' };\n    }\n    if (mapping.crewNumber) {\n      worksheet[mapping.crewNumber] = { t: 's', v: crewInfo?.crewNumber || '' };\n    }\n    if (mapping.fireName) {\n      worksheet[mapping.fireName] = { t: 's', v: crewInfo?.fireName || '' };\n    }\n    if (mapping.fireNumber) {\n      worksheet[mapping.fireNumber] = { t: 's', v: crewInfo?.fireNumber || '' };\n    }\n\n    // Fill dates\n    if (mapping.date1) {\n      worksheet[mapping.date1] = { t: 's', v: days?.[0] || '' };\n    }\n    if (mapping.date2) {\n      worksheet[mapping.date2] = { t: 's', v: days?.[1] || '' };\n    }\n\n    // Fill crew member data\n    const startRow = mapping.nameStartRow || 6;\n    data.forEach((row, idx) => {\n      // Skip if row is undefined or has no data\n      if (!row || (!row.name && !row.classification)) return;\n      \n      const rowNum = startRow + idx;\n      if (rowNum > startRow + 19) return; // Don't exceed 20 rows\n\n      // Fill name and classification\n      if (mapping.nameCol) {\n        worksheet[`${mapping.nameCol}${rowNum}`] = { t: 's', v: row.name || '' };\n      }\n      if (mapping.classCol) {\n        worksheet[`${mapping.classCol}${rowNum}`] = { t: 's', v: row.classification || '' };\n      }\n\n      // Fill times for day 1\n      if (row.days?.[0]) {\n        if (mapping.on1Col) {\n          worksheet[`${mapping.on1Col}${rowNum}`] = { t: 's', v: row.days[0].on || '' };\n        }\n        if (mapping.off1Col) {\n          worksheet[`${mapping.off1Col}${rowNum}`] = { t: 's', v: row.days[0].off || '' };\n        }\n      }\n\n      // Fill times for day 2\n      if (row.days?.[1]) {\n        if (mapping.on2Col) {\n          worksheet[`${mapping.on2Col}${rowNum}`] = { t: 's', v: row.days[1].on || '' };\n        }\n        if (mapping.off2Col) {\n          worksheet[`${mapping.off2Col}${rowNum}`] = { t: 's', v: row.days[1].off || '' };\n        }\n      }\n    });\n\n    // Calculate and fill total hours\n    const totalHours = calculateTotalHours(data);\n    if (mapping.totalHoursRow && mapping.totalHoursCol) {\n      worksheet[`${mapping.totalHoursCol}${mapping.totalHoursRow}`] = { t: 'n', v: totalHours };\n    }\n\n    return workbook;\n  } catch (error) {\n    console.error('Error filling Excel template:', error);\n    throw error;\n  }\n}\n\nfunction findHeaderCells(worksheet: XLSX.WorkSheet): TemplateMapping {\n  const mapping: TemplateMapping = {};\n  const range = XLSX.utils.decode_range(worksheet['!ref'] || 'A1');\n\n  // Search for header patterns\n  for (let R = range.s.r; R <= range.e.r; R++) {\n    for (let C = range.s.c; C <= range.e.c; C++) {\n      const cell = worksheet[XLSX.utils.encode_cell({ r: R, c: C })];\n      if (!cell || !cell.v) continue;\n\n      const value = String(cell.v).toLowerCase();\n      const cellRef = XLSX.utils.encode_cell({ r: R, c: C });\n\n      // Look for header patterns\n      if (value.includes('crew') && value.includes('name')) {\n        mapping.crewName = cellRef;\n      } else if (value.includes('crew') && value.includes('number')) {\n        mapping.crewNumber = cellRef;\n      } else if (value.includes('fire') && value.includes('name')) {\n        mapping.fireName = cellRef;\n      } else if (value.includes('fire') && value.includes('number')) {\n        mapping.fireNumber = cellRef;\n      } else if (value.includes('date') && !mapping.date1) {\n        mapping.date1 = cellRef;\n      } else if (value.includes('date') && mapping.date1) {\n        mapping.date2 = cellRef;\n      } else if (value.includes('name') && !mapping.nameCol) {\n        mapping.nameCol = XLSX.utils.encode_col(C);\n        mapping.nameStartRow = R + 1;\n      } else if (value.includes('class') && !mapping.classCol) {\n        mapping.classCol = XLSX.utils.encode_col(C);\n      } else if (value.includes('on') && !mapping.on1Col) {\n        mapping.on1Col = XLSX.utils.encode_col(C);\n      } else if (value.includes('off') && !mapping.off1Col) {\n        mapping.off1Col = XLSX.utils.encode_col(C);\n      } else if (value.includes('total') && value.includes('hours')) {\n        mapping.totalHoursRow = R;\n        mapping.totalHoursCol = XLSX.utils.encode_col(C + 1); // Assuming total is in next column\n      }\n    }\n  }\n\n  return mapping;\n}\n\nfunction calculateTotalHours(data: CrewMember[]): number {\n  if (!Array.isArray(data)) return 0;\n  \n  let total = 0;\n  for (const row of data) {\n    if (!row || !row.days || !Array.isArray(row.days)) continue;\n    \n    for (const day of row.days) {\n      if (!day) continue;\n      const on = parseMilitaryTime(day.on);\n      const off = parseMilitaryTime(day.off);\n      if (on !== null && off !== null && off >= on) {\n        total += off - on;\n      }\n    }\n  }\n  return Number(total.toFixed(2));\n}\n\nfunction parseMilitaryTime(time: string): number | null {\n  if (!/^\\d{4}$/.test(time)) return null;\n  const h = parseInt(time.slice(0, 2), 10);\n  const m = parseInt(time.slice(2, 4), 10);\n  if (h > 23 || m > 59) return null;\n  return h + m / 60;\n} ","import { openDB, DBSchema, IDBPDatabase } from 'idb';\n\ninterface CTRData extends DBSchema {\n  ctr_records: {\n    key: string; // date range as key (YYYY-MM-DD to YYYY-MM-DD)\n    value: {\n      dateRange: string;\n      data: any[];\n      crewInfo: {\n        crewName: string;\n        crewNumber: string;\n        fireName: string;\n        fireNumber: string;\n      };\n    };\n  };\n}\n\nclass CTRDataService {\n  private db: IDBPDatabase<CTRData> | null = null;\n  private readonly DB_NAME = 'ctr-database';\n  private readonly STORE_NAME = 'ctr_records';\n\n  async initDB() {\n    if (!this.db) {\n      this.db = await openDB<CTRData>(this.DB_NAME, 1, {\n        upgrade(db) {\n          if (!db.objectStoreNames.contains('ctr_records')) {\n            db.createObjectStore('ctr_records');\n          }\n        },\n      });\n    }\n    return this.db;\n  }\n\n  private formatDateRange(date1: string, date2: string): string {\n    return `${date1} to ${date2}`;\n  }\n\n  async saveRecord(date1: string, date2: string, data: any[], crewInfo: any) {\n    const db = await this.initDB();\n    const dateRange = this.formatDateRange(date1, date2);\n    console.log('Saving date range:', dateRange);\n    await db.put(this.STORE_NAME, {\n      dateRange,\n      data,\n      crewInfo\n    }, dateRange);\n  }\n\n  async getRecord(dateRange: string) {\n    const db = await this.initDB();\n    console.log('Getting record for date range:', dateRange);\n    return db.get(this.STORE_NAME, dateRange);\n  }\n\n  async getAllDateRanges(): Promise<string[]> {\n    const db = await this.initDB();\n    const ranges = await db.getAllKeys(this.STORE_NAME);\n    console.log('All date ranges:', ranges);\n    return ranges;\n  }\n\n  async deleteRecord(dateRange: string) {\n    const db = await this.initDB();\n    await db.delete(this.STORE_NAME, dateRange);\n  }\n}\n\nexport const ctrDataService = new CTRDataService(); ","import React from 'react';\nimport './Notification.css';\n\ninterface NotificationProps {\n  message: string;\n  type: 'success' | 'info' | 'warning' | 'error';\n  onClose: () => void;\n  duration?: number;\n}\n\nexport function Notification(props: NotificationProps) {\n  const { message, type, onClose, duration = 3000 } = props;\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, duration);\n\n    return () => clearTimeout(timer);\n  }, [duration, onClose]);\n\n  return (\n    <div className={`notification notification-${type}`}>\n      <div className=\"notification-content\">\n        {message}\n      </div>\n      <button className=\"notification-close\" onClick={onClose}>×</button>\n    </div>\n  );\n} ","import { CrewMember, CrewInfo } from '../types/CTRTypes';\nimport * as XLSX from 'xlsx';\n\n// Define the expected cell locations in the Excel template\nexport const EXCEL_CELL_MAPPING = {\n  crewInfo: {\n    crewName: 'B1',\n    crewNumber: 'H1',\n    fireName: 'C2',\n    fireNumber: 'H2'\n  },\n  dates: {\n    date1: 'F4',\n    date2: 'H4'\n  },\n  crewMembers: {\n    startRow: 6, // Excel row 6 is where crew member data starts\n    columns: {\n      name: 'B',\n      classification: 'D',\n      on1: 'E',\n      off1: 'F',\n      on2: 'G',\n      off2: 'H'\n    }\n  }\n};\n\nfunction getMergedCellValue(worksheet: XLSX.WorkSheet, cellAddress: string): any {\n  // Check if the cell has a value\n  if (worksheet[cellAddress] && worksheet[cellAddress].v !== undefined) {\n    return worksheet[cellAddress].v;\n  }\n  // Check for merges\n  const merges = worksheet['!merges'] || [];\n  const XLSXUtils = XLSX.utils.decode_cell;\n  const target = XLSXUtils(cellAddress);\n\n  for (const merge of merges) {\n    // Check if the cell is within this merge range\n    if (\n      target.r >= merge.s.r && target.r <= merge.e.r &&\n      target.c >= merge.s.c && target.c <= merge.e.c\n    ) {\n      // Get the top-left cell of the merge\n      const topLeft = XLSX.utils.encode_cell({ r: merge.s.r, c: merge.s.c });\n      return worksheet[topLeft]?.v ?? '';\n    }\n  }\n  return '';\n}\n\nexport function mapExcelToData(worksheet: XLSX.WorkSheet): { crewInfo: CrewInfo; crewMembers: CrewMember[] } {\n  // Extract crew info from specific cells\n  const crewInfo: CrewInfo = {\n    crewName: getMergedCellValue(worksheet, EXCEL_CELL_MAPPING.crewInfo.crewName) || '',\n    crewNumber: getMergedCellValue(worksheet, EXCEL_CELL_MAPPING.crewInfo.crewNumber) || '',\n    fireName: getMergedCellValue(worksheet, EXCEL_CELL_MAPPING.crewInfo.fireName) || '',\n    fireNumber: getMergedCellValue(worksheet, EXCEL_CELL_MAPPING.crewInfo.fireNumber) || ''\n  };\n\n  // Extract dates from specific cells\n  const date1 = getMergedCellValue(worksheet, EXCEL_CELL_MAPPING.dates.date1) || '';\n  const date2 = getMergedCellValue(worksheet, EXCEL_CELL_MAPPING.dates.date2) || '';\n\n  const crewMembers: CrewMember[] = [];\n  let row = EXCEL_CELL_MAPPING.crewMembers.startRow;\n  \n  // Read up to 20 crew members (rows 6-25)\n  while (row <= 25) {\n    // Get the name cell for this row\n    const nameCell = worksheet[`${EXCEL_CELL_MAPPING.crewMembers.columns.name}${row}`];\n    \n    // If no name is found in the expected cell, stop reading\n    if (!nameCell?.v) break;\n\n    // Create crew member object with data from specific cells\n    const crewMember: CrewMember = {\n      name: getMergedCellValue(worksheet, `${EXCEL_CELL_MAPPING.crewMembers.columns.name}${row}`),\n      classification: getMergedCellValue(worksheet, `${EXCEL_CELL_MAPPING.crewMembers.columns.classification}${row}`),\n      days: [\n        {\n          date: date1,\n          on: getMergedCellValue(worksheet, `${EXCEL_CELL_MAPPING.crewMembers.columns.on1}${row}`),\n          off: getMergedCellValue(worksheet, `${EXCEL_CELL_MAPPING.crewMembers.columns.off1}${row}`)\n        },\n        {\n          date: date2,\n          on: getMergedCellValue(worksheet, `${EXCEL_CELL_MAPPING.crewMembers.columns.on2}${row}`),\n          off: getMergedCellValue(worksheet, `${EXCEL_CELL_MAPPING.crewMembers.columns.off2}${row}`)\n        }\n      ]\n    };\n\n    crewMembers.push(crewMember);\n    row++;\n  }\n\n  return { crewInfo, crewMembers };\n}\n\nexport function mapDataToExcel(data: { crewInfo: CrewInfo; crewMembers: CrewMember[] }): XLSX.WorkSheet {\n  const worksheet: XLSX.WorkSheet = {};\n\n  // Set crew info in specific cells\n  worksheet[EXCEL_CELL_MAPPING.crewInfo.crewName] = { t: 's', v: data.crewInfo.crewName };\n  worksheet[EXCEL_CELL_MAPPING.crewInfo.crewNumber] = { t: 's', v: data.crewInfo.crewNumber };\n  worksheet[EXCEL_CELL_MAPPING.crewInfo.fireName] = { t: 's', v: data.crewInfo.fireName };\n  worksheet[EXCEL_CELL_MAPPING.crewInfo.fireNumber] = { t: 's', v: data.crewInfo.fireNumber };\n\n  // Set dates in specific cells\n  if (data.crewMembers[0]?.days[0]) {\n    worksheet[EXCEL_CELL_MAPPING.dates.date1] = { t: 's', v: data.crewMembers[0].days[0].date };\n  }\n  if (data.crewMembers[0]?.days[1]) {\n    worksheet[EXCEL_CELL_MAPPING.dates.date2] = { t: 's', v: data.crewMembers[0].days[1].date };\n  }\n\n  // Set crew member data in specific cells\n  data.crewMembers.forEach((member, index) => {\n    const row = EXCEL_CELL_MAPPING.crewMembers.startRow + index;\n    \n    // Set name and classification\n    worksheet[`${EXCEL_CELL_MAPPING.crewMembers.columns.name}${row}`] = { t: 's', v: member.name };\n    worksheet[`${EXCEL_CELL_MAPPING.crewMembers.columns.classification}${row}`] = { t: 's', v: member.classification };\n    \n    // Set first day's times\n    if (member.days[0]) {\n      worksheet[`${EXCEL_CELL_MAPPING.crewMembers.columns.on1}${row}`] = { t: 's', v: member.days[0].on };\n      worksheet[`${EXCEL_CELL_MAPPING.crewMembers.columns.off1}${row}`] = { t: 's', v: member.days[0].off };\n    }\n    \n    // Set second day's times\n    if (member.days[1]) {\n      worksheet[`${EXCEL_CELL_MAPPING.crewMembers.columns.on2}${row}`] = { t: 's', v: member.days[1].on };\n      worksheet[`${EXCEL_CELL_MAPPING.crewMembers.columns.off2}${row}`] = { t: 's', v: member.days[1].off };\n    }\n  });\n\n  return worksheet;\n} ","// File containing functions for calculate hours\n\n// CrewMember object with times\ninterface CrewMember {\n  name: string;\n  classification: string;\n  days: Array<{\n    on: string;\n    off: string;\n  }>;\n}\n\n// Declare function and export\nexport function calculateTotalHours(data: CrewMember[]): number {\n  // initialize to totalHours to zero\n  let totalHours = 0;\n\n  // iterate over each CrewMember in data array\n  data.forEach(member => {\n    // if days empty for member - skip\n    if (!member.days) return;\n    \n    // iterates over each day for crew member\n    member.days.forEach(day => {\n      // skip if on or off time is missing\n      if (!day.on || !day.off) return;\n      \n      // converts on and off time to minutes\n      const onTime = convertToMinutes(day.on);\n      const offTime = convertToMinutes(day.off);\n\n      // skips if conversion fails\n      if (onTime === null || offTime === null) return;\n\n      // convert total minutes to total hours\n      let hours = (offTime - onTime) / 60;\n      \n      // Handle overnight shifts\n      if (hours < 0) {\n        hours += 24;\n      }\n\n      // calculate running total\n      totalHours += hours;\n    });\n  });\n  // round total hours to two decimals\n  return Number(totalHours.toFixed(2));\n}\n\n// Function to convert to minutes\nfunction convertToMinutes(time: string): number | null {\n  // Handle military time format (HHMM) by checking for exactly 4 digits in string\n  if (/^\\d{4}$/.test(time)) {\n    // establishes hours from first 2 digist, minutes from last 2\n    const hours = parseInt(time.substring(0, 2));\n    const minutes = parseInt(time.substring(2, 4));\n    \n    // convert to minutes function\n    if (hours >= 0 && hours <= 23 && minutes >= 0 && minutes <= 59) {\n      return hours * 60 + minutes;\n    }\n  }\n  \n  // Handle HH:MM format\n  const match = time.match(/^(\\d{1,2}):(\\d{2})$/);\n  if (match) {\n    const hours = parseInt(match[1]);\n    const minutes = parseInt(match[2]);\n    \n    //valudate and return total minutes\n    if (hours >= 0 && hours <= 23 && minutes >= 0 && minutes <= 59) {\n      return hours * 60 + minutes;\n    }\n  }\n\n  return null;\n} ","import React, { useState, useEffect } from 'react';\nimport './DateCalendar.css';\n\ninterface DateCalendarProps {\n  savedDates: string[];\n  onDateSelect: (dateRange: string) => void;\n  onClose: () => void;\n}\n\nexport const DateCalendar: React.FC<DateCalendarProps> = ({ savedDates, onDateSelect, onClose }) => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n  const [calendarDays, setCalendarDays] = useState<Date[]>([]);\n\n  // Generate calendar days for the current month\n  useEffect(() => {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    \n    // Get the day of the week for the first day (0 = Sunday, 6 = Saturday)\n    const firstDayOfWeek = firstDay.getDay();\n    \n    // Calculate the number of days to show from the previous month\n    const daysFromPrevMonth = firstDayOfWeek;\n    \n    // Calculate the number of days to show from the next month\n    const totalDays = 35; // 5 rows * 7 days\n    const daysFromNextMonth = totalDays - (lastDay.getDate() + daysFromPrevMonth);\n    \n    const days: Date[] = [];\n    \n    // Add days from previous month\n    for (let i = daysFromPrevMonth - 1; i >= 0; i--) {\n      days.push(new Date(year, month, -i));\n    }\n    \n    // Add days from current month\n    for (let i = 1; i <= lastDay.getDate(); i++) {\n      days.push(new Date(year, month, i));\n    }\n    \n    // Add days from next month\n    for (let i = 1; i <= daysFromNextMonth; i++) {\n      days.push(new Date(year, month + 1, i));\n    }\n    \n    setCalendarDays(days);\n  }, [currentDate]);\n\n  const handlePrevMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\n  };\n\n  const handleNextMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\n  };\n\n  const handleDateClick = (date: Date) => {\n    setSelectedDate(date);\n    // Find if there's a saved date range that includes this date\n    const dateStr = date.toISOString().split('T')[0];\n    const matchingDateRange = savedDates.find(range => {\n      const [start, end] = range.split(' to ');\n      return dateStr >= start && dateStr <= end;\n    });\n    \n    if (matchingDateRange) {\n      onDateSelect(matchingDateRange);\n      onClose();\n    }\n  };\n\n  const isDateSaved = (date: Date) => {\n    const dateStr = date.toISOString().split('T')[0];\n    return savedDates.some(range => {\n      const [start, end] = range.split(' to ');\n      return dateStr >= start && dateStr <= end;\n    });\n  };\n\n  const isCurrentMonth = (date: Date) => {\n    return date.getMonth() === currentDate.getMonth();\n  };\n\n  return (\n    <div className=\"date-calendar-modal\">\n      <div className=\"date-calendar-content\">\n        <div className=\"date-calendar-header\">\n          <button onClick={handlePrevMonth}>&lt;</button>\n          <h3>{currentDate.toLocaleString('default', { month: 'long', year: 'numeric' })}</h3>\n          <button onClick={handleNextMonth}>&gt;</button>\n        </div>\n        <div className=\"date-calendar-grid\">\n          <div className=\"date-calendar-weekdays\">\n            {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n              <div key={day} className=\"date-calendar-weekday\">{day}</div>\n            ))}\n          </div>\n          <div className=\"date-calendar-days\">\n            {calendarDays.map((date, index) => (\n              <div\n                key={index}\n                className={`date-calendar-day ${\n                  !isCurrentMonth(date) ? 'other-month' : ''\n                } ${isDateSaved(date) ? 'has-entry' : ''} ${\n                  selectedDate?.toDateString() === date.toDateString() ? 'selected' : ''\n                }`}\n                onClick={() => handleDateClick(date)}\n              >\n                {date.getDate()}\n              </div>\n            ))}\n          </div>\n        </div>\n        <button className=\"date-calendar-close\" onClick={onClose}>Close</button>\n      </div>\n    </div>\n  );\n}; ","import React, { useEffect, useState, useRef } from 'react';\nimport { listPDFs, deletePDF, getPDF, storePDF } from '../utils/pdfStorage';\nimport { PDFDocument } from 'pdf-lib';\n\ninterface StoredPDF {\n  id: string;\n  pdf: Blob;\n  metadata: {\n    filename: string;\n    date: string;\n    crewNumber: string;\n    fireName: string;\n    fireNumber: string;\n  };\n  timestamp: string;\n}\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\ntype SortField = 'date' | 'crewNumber' | 'fireName' | 'timestamp';\ntype SortDirection = 'asc' | 'desc';\n\nexport default function StoredPDFs() {\n  const [pdfs, setPdfs] = useState<StoredPDF[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedPDF, setSelectedPDF] = useState<StoredPDF | null>(null);\n  const [pdfUrl, setPdfUrl] = useState<string | null>(null);\n  const [sortField, setSortField] = useState<SortField>('timestamp');\n  const [sortDirection, setSortDirection] = useState<SortDirection>('desc');\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [drawingMode, setDrawingMode] = useState(false);\n  const [canvasSize, setCanvasSize] = useState({ width: 800, height: 1000 });\n  \n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const contextRef = useRef<CanvasRenderingContext2D | null>(null);\n  const lastPoint = useRef<Point | null>(null);\n  const pdfViewerRef = useRef<HTMLDivElement>(null);\n\n  // Initialize canvas context and handle resize\n  useEffect(() => {\n    if (canvasRef.current && drawingMode) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      \n      if (context) {\n        context.strokeStyle = 'black';\n        context.lineWidth = 2;\n        context.lineCap = 'round';\n        contextRef.current = context;\n      }\n\n      // Update canvas size based on PDF viewer size\n      const updateCanvasSize = () => {\n        if (pdfViewerRef.current) {\n          const { width, height } = pdfViewerRef.current.getBoundingClientRect();\n          setCanvasSize({ width, height });\n          canvas.width = width;\n          canvas.height = height;\n          \n          // Restore context properties after resize\n          if (context) {\n            context.strokeStyle = 'black';\n            context.lineWidth = 2;\n            context.lineCap = 'round';\n          }\n        }\n      };\n\n      // Initial size update\n      updateCanvasSize();\n\n      // Add resize listener\n      const resizeObserver = new ResizeObserver(updateCanvasSize);\n      if (pdfViewerRef.current) {\n        resizeObserver.observe(pdfViewerRef.current);\n      }\n\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }\n  }, [drawingMode]);\n\n  // Cleanup function for URL objects\n  useEffect(() => {\n    return () => {\n      if (pdfUrl) {\n        URL.revokeObjectURL(pdfUrl);\n      }\n    };\n  }, [pdfUrl]);\n\n  const startDrawing = (event: React.MouseEvent<HTMLCanvasElement> | React.TouchEvent<HTMLCanvasElement>) => {\n    if (!drawingMode) return;\n    \n    setIsDrawing(true);\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const point = getEventPoint(event, rect);\n    \n    lastPoint.current = point;\n    \n    const context = contextRef.current;\n    if (context) {\n      context.beginPath();\n      context.moveTo(point.x, point.y);\n    }\n  };\n\n  const draw = (event: React.MouseEvent<HTMLCanvasElement> | React.TouchEvent<HTMLCanvasElement>) => {\n    if (!isDrawing || !drawingMode) return;\n    \n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const point = getEventPoint(event, rect);\n    \n    const context = contextRef.current;\n    if (context && lastPoint.current) {\n      context.beginPath();\n      context.moveTo(lastPoint.current.x, lastPoint.current.y);\n      context.lineTo(point.x, point.y);\n      context.stroke();\n    }\n    \n    lastPoint.current = point;\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n    lastPoint.current = null;\n  };\n\n  const getEventPoint = (\n    event: React.MouseEvent<HTMLCanvasElement> | React.TouchEvent<HTMLCanvasElement>,\n    rect: DOMRect\n  ): Point => {\n    if ('touches' in event) {\n      const touch = event.touches[0];\n      return {\n        x: touch.clientX - rect.left,\n        y: touch.clientY - rect.top\n      };\n    } else {\n      return {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n    }\n  };\n\n  const clearDrawing = () => {\n    const context = contextRef.current;\n    const canvas = canvasRef.current;\n    if (context && canvas) {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  };\n\n  const saveDrawing = async () => {\n    if (!selectedPDF || !canvasRef.current) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Get the drawing as a PNG\n      const canvas = canvasRef.current;\n      const drawingBlob = await new Promise<Blob>((resolve) => {\n        canvas.toBlob((blob) => {\n          resolve(blob!);\n        }, 'image/png');\n      });\n\n      // Load the original PDF\n      const pdfArrayBuffer = await selectedPDF.pdf.arrayBuffer();\n      const pdfDoc = await PDFDocument.load(pdfArrayBuffer);\n      \n      // Convert PNG to PDF-compatible format\n      const drawingImage = await pdfDoc.embedPng(await drawingBlob.arrayBuffer());\n      \n      // Get the first page\n      const page = pdfDoc.getPages()[0];\n      const { width, height } = page.getSize();\n\n      // Add the drawing to the PDF\n      page.drawImage(drawingImage, {\n        x: 0,\n        y: 0,\n        width,\n        height,\n        opacity: 0.8\n      });\n\n      // Save the modified PDF\n      const modifiedPdfBytes = await pdfDoc.save();\n      const modifiedPdfBlob = new Blob([modifiedPdfBytes], { type: 'application/pdf' });\n\n      // Store the modified PDF\n      await storePDF(modifiedPdfBlob, selectedPDF.metadata);\n      \n      // Refresh the PDF list\n      await refreshPDFs();\n      \n      // Clear the drawing\n      clearDrawing();\n      setDrawingMode(false);\n\n    } catch (error) {\n      console.error('Error saving drawing:', error);\n      setError('Failed to save drawing. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const refreshPDFs = async () => {\n    try {\n      console.log('Refreshing PDFs...');\n      setLoading(true);\n      setError(null);\n      const storedPDFs = await listPDFs();\n      console.log('Refreshed PDFs:', storedPDFs);\n      setPdfs(storedPDFs);\n      \n      // If we have a selected PDF, update it with the refreshed data\n      if (selectedPDF) {\n        const updatedPDF = storedPDFs.find(pdf => pdf.id === selectedPDF.id);\n        if (updatedPDF) {\n          setSelectedPDF(updatedPDF);\n        }\n      }\n    } catch (error) {\n      console.error('Error refreshing PDFs:', error);\n      setError('Failed to refresh PDFs. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('StoredPDFs component mounted');\n    refreshPDFs();\n  }, []);\n\n  const handleSort = (field: SortField) => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('desc');\n    }\n  };\n\n  const sortedPDFs = [...pdfs].sort((a, b) => {\n    let comparison = 0;\n    \n    switch (sortField) {\n      case 'date':\n        comparison = a.metadata.date.localeCompare(b.metadata.date);\n        break;\n      case 'crewNumber':\n        comparison = a.metadata.crewNumber.localeCompare(b.metadata.crewNumber);\n        break;\n      case 'fireName':\n        comparison = a.metadata.fireName.localeCompare(b.metadata.fireName);\n        break;\n      case 'timestamp':\n        comparison = new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime();\n        break;\n    }\n    \n    return sortDirection === 'asc' ? comparison : -comparison;\n  });\n\n  const handleOpen = async (pdf: StoredPDF) => {\n    try {\n      console.log('Opening PDF:', pdf.metadata.filename);\n      \n      // Clean up previous URL if it exists\n      if (pdfUrl) {\n        URL.revokeObjectURL(pdfUrl);\n      }\n      \n      // Create a new URL for the PDF blob\n      const url = URL.createObjectURL(pdf.pdf);\n      setPdfUrl(url);\n      setSelectedPDF(pdf);\n      setError(null);\n      \n      // Don't reset drawing mode when opening a new PDF\n      if (drawingMode) {\n        clearDrawing();\n      }\n    } catch (error) {\n      console.error('Error opening PDF:', error);\n      setError('Failed to open PDF. Please try again.');\n    }\n  };\n\n  const handleClose = () => {\n    if (pdfUrl) {\n      URL.revokeObjectURL(pdfUrl);\n      setPdfUrl(null);\n    }\n    setSelectedPDF(null);\n  };\n\n  const handleDownload = async (id: string) => {\n    try {\n      console.log('Downloading PDF:', id);\n      const pdf = await getPDF(id);\n      if (pdf) {\n        const url = URL.createObjectURL(pdf.pdf);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = pdf.metadata.filename;\n        a.click();\n        URL.revokeObjectURL(url);\n      } else {\n        console.error('PDF not found:', id);\n        setError('PDF not found. It may have been deleted.');\n      }\n    } catch (error) {\n      console.error('Error downloading PDF:', error);\n      setError('Failed to download PDF. Please try again.');\n    }\n  };\n\n  const handleDelete = async (id: string) => {\n    try {\n      console.log('Deleting PDF:', id);\n      await deletePDF(id);\n      if (selectedPDF?.id === id) {\n        handleClose();\n      }\n      await refreshPDFs();\n    } catch (error) {\n      console.error('Error deleting PDF:', error);\n      setError('Failed to delete PDF. Please try again.');\n    }\n  };\n\n  if (loading) {\n    return <div className=\"stored-pdfs\">Loading stored PDFs...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"stored-pdfs\">\n        <div className=\"error-message\">{error}</div>\n        <button onClick={refreshPDFs}>Retry</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"stored-pdfs\">\n      <div className=\"stored-pdfs-header\">\n        <h3>Stored PDFs</h3>\n        <button onClick={refreshPDFs} className=\"refresh-btn\">Refresh</button>\n      </div>\n      \n      <div className=\"stored-pdfs-container\">\n        {/* PDF List Panel */}\n        <div className=\"pdf-list-panel\">\n          {pdfs.length === 0 ? (\n            <p>No PDFs stored yet. Generate a PDF using the \"Export to PDF\" button above.</p>\n          ) : (\n            <div className=\"pdf-list\">\n              <div className=\"pdf-list-header\">\n                <button \n                  className={`sort-btn ${sortField === 'date' ? 'active' : ''}`}\n                  onClick={() => handleSort('date')}\n                >\n                  Date {sortField === 'date' && (sortDirection === 'asc' ? '↑' : '↓')}\n                </button>\n                <button \n                  className={`sort-btn ${sortField === 'crewNumber' ? 'active' : ''}`}\n                  onClick={() => handleSort('crewNumber')}\n                >\n                  Crew {sortField === 'crewNumber' && (sortDirection === 'asc' ? '↑' : '↓')}\n                </button>\n                <button \n                  className={`sort-btn ${sortField === 'fireName' ? 'active' : ''}`}\n                  onClick={() => handleSort('fireName')}\n                >\n                  Fire {sortField === 'fireName' && (sortDirection === 'asc' ? '↑' : '↓')}\n                </button>\n                <button \n                  className={`sort-btn ${sortField === 'timestamp' ? 'active' : ''}`}\n                  onClick={() => handleSort('timestamp')}\n                >\n                  Stored {sortField === 'timestamp' && (sortDirection === 'asc' ? '↑' : '↓')}\n                </button>\n              </div>\n              {sortedPDFs.map((pdf) => (\n                <div key={pdf.id} className={`pdf-item ${selectedPDF?.id === pdf.id ? 'selected' : ''}`}>\n                  <div className=\"pdf-info\">\n                    <strong>{pdf.metadata.filename}</strong>\n                    <div>Date: {pdf.metadata.date}</div>\n                    <div>Crew: {pdf.metadata.crewNumber}</div>\n                    <div>Fire: {pdf.metadata.fireName} ({pdf.metadata.fireNumber})</div>\n                    <div>Stored: {new Date(pdf.timestamp).toLocaleString()}</div>\n                  </div>\n                  <div className=\"pdf-actions\">\n                    <button onClick={() => handleOpen(pdf)} className=\"open-btn\">\n                      {selectedPDF?.id === pdf.id ? 'Viewing' : 'View'}\n                    </button>\n                    <button onClick={() => handleDownload(pdf.id)} className=\"download-btn\">Download</button>\n                    <button onClick={() => handleDelete(pdf.id)} className=\"delete-btn\">Delete</button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* PDF Viewer Panel */}\n        {selectedPDF && pdfUrl && (\n          <div className=\"pdf-viewer-panel\">\n            <div className=\"pdf-viewer-header\">\n              <div className=\"pdf-viewer-title\">\n                <h4>{selectedPDF.metadata.filename}</h4>\n              </div>\n              <div className=\"pdf-viewer-actions\">\n                <button \n                  onClick={() => setDrawingMode(!drawingMode)} \n                  className={`draw-btn ${drawingMode ? 'active' : ''}`}\n                >\n                  {drawingMode ? 'Cancel Drawing' : 'Draw'}\n                </button>\n                {drawingMode && (\n                  <>\n                    <button onClick={clearDrawing} className=\"clear-btn\">\n                      Clear\n                    </button>\n                    <button onClick={saveDrawing} className=\"save-btn\">\n                      Save\n                    </button>\n                  </>\n                )}\n                <button onClick={handleClose} className=\"close-btn\">Close</button>\n              </div>\n            </div>\n            <div className=\"pdf-viewer-content\" ref={pdfViewerRef}>\n              <iframe\n                src={pdfUrl}\n                title={selectedPDF.metadata.filename}\n                width=\"100%\"\n                height=\"100%\"\n                style={{ \n                  border: 'none',\n                  display: drawingMode ? 'none' : 'block'\n                }}\n              />\n              {drawingMode && (\n                <canvas\n                  ref={canvasRef}\n                  width={canvasSize.width}\n                  height={canvasSize.height}\n                  onMouseDown={startDrawing}\n                  onMouseMove={draw}\n                  onMouseUp={stopDrawing}\n                  onMouseLeave={stopDrawing}\n                  onTouchStart={startDrawing}\n                  onTouchMove={draw}\n                  onTouchEnd={stopDrawing}\n                  className=\"drawing-canvas\"\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useEffect, useState } from 'react';\nimport { defaultData } from '../data/defaultData';\nimport './MainTable.css';\nimport { fillCTRPDF } from '../utils/fillCTRPDF';\nimport * as XLSX from 'xlsx';\nimport { fillExcelTemplate } from '../utils/fillExcelTemplate';\nimport { generateExportFilename } from '../utils/filenameGenerator';\nimport { ctrDataService } from '../utils/CTRDataService';\nimport { Notification } from './Notification';\nimport { mapExcelToData } from '../utils/excelMapping';\nimport { CrewMember, CrewInfo, Day } from '../types/CTRTypes';\nimport { calculateTotalHours } from '../utils/timeCalculations';\nimport { DateCalendar } from './DateCalendar';\nimport StoredPDFs from './StoredPDFs';\n\n// TypeScript interfaces\ninterface EditingCell {\n  row: number;\n  field: string;\n  dayIdx?: number;\n}\n\ninterface NotificationState {\n  message: string;\n  type: 'success' | 'info' | 'warning' | 'error';\n  show: boolean;\n}\n\nconst STORAGE_KEY = 'ctr-table-data';\n\nfunction saveData(data: CrewMember[]) {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n}\n\nfunction loadData(): CrewMember[] {\n  const raw = localStorage.getItem(STORAGE_KEY);\n  if (raw) {\n    try {\n      return JSON.parse(raw);\n    } catch {\n      return defaultData;\n    }\n  }\n  return defaultData;\n}\n\nfunction toExcelTemplate(data: CrewMember[], crewInfo: CrewInfo, days: string[]): XLSX.WorkBook {\n  // Create a blank worksheet with enough rows/cols\n  const ws: XLSX.WorkSheet = {};\n  // Set up the data array for AoA\n  const aoa: any[][] = Array.from({ length: 30 }, () => Array(9).fill(\"\"));\n\n  // Header info\n  aoa[0][1] = crewInfo.crewName || \"\"; // B1\n  aoa[0][7] = crewInfo.crewNumber || \"\"; // H1\n  aoa[1][1] = crewInfo.fireName || \"\"; // B2\n  aoa[1][7] = crewInfo.fireNumber || \"\"; // H2\n\n  // Date headers\n  aoa[3][5] = days[0] || \"\"; // F4\n  aoa[3][7] = days[1] || \"\"; // H4\n\n  // Yellow highlight row (row 6, E-H)\n  for (let col = 4; col <= 7; col++) aoa[5][col] = \"\";\n\n  // Table rows (6-25)\n  for (let i = 0; i < 20; i++) {\n    const row = data[i] || { name: \"\", classification: \"\", days: [{ on: \"\", off: \"\" }, { on: \"\", off: \"\" }] };\n    const r = 5 + i; // Excel row 6 is index 5\n    aoa[r][1] = row.name || \"\"; // B\n    aoa[r][2] = \"\"; // C (merged with B)\n    aoa[r][3] = row.classification || \"\"; // D\n    aoa[r][4] = row.days[0]?.on || \"\"; // E (date 1 ON)\n    aoa[r][5] = row.days[0]?.off || \"\"; // F (date 1 OFF)\n    aoa[r][6] = row.days[1]?.on || \"\"; // G (date 2 ON)\n    aoa[r][7] = row.days[1]?.off || \"\"; // H (date 2 OFF)\n  }\n\n  // Calculate total hours\n  const totalHours = calculateTotalHours(data);\n\n  // Total Hours row (row 29)\n  aoa[28][1] = \"Total Hours\";\n  aoa[28][2] = totalHours;\n\n  // Write AoA to worksheet\n  XLSX.utils.sheet_add_aoa(ws, aoa);\n\n  // Merge B & C for names\n  for (let r = 6; r <= 25; r++) {\n    if (!ws['!merges']) ws['!merges'] = [];\n    ws['!merges'].push({ s: { r: r - 1, c: 1 }, e: { r: r - 1, c: 2 } });\n  }\n\n  // Set column widths\n  ws['!cols'] = [\n    { wpx: 10 },   // A\n    { wpx: 120 },  // B (Name)\n    { wpx: 120 },  // C (Name merged)\n    { wpx: 60 },   // D (Class)\n    { wpx: 50 },   // E (ON 1)\n    { wpx: 50 },   // F (OFF 1)\n    { wpx: 50 },   // G (ON 2)\n    { wpx: 50 },   // H (OFF 2)\n  ];\n\n  // Highlight row 6, E-H (yellow)\n  for (let c = 4; c <= 7; c++) {\n    const cell = XLSX.utils.encode_cell({ r: 5, c });\n    if (!ws[cell]) ws[cell] = { t: 's', v: '' };\n    ws[cell].s = { fill: { fgColor: { rgb: 'FFFF00' } } };\n  }\n\n  // Set time format for ON/OFF cells\n  for (let r = 6; r <= 25; r++) {\n    for (let c of [4, 5, 6, 7]) {\n      const cell = XLSX.utils.encode_cell({ r: r - 1, c });\n      if (ws[cell]) ws[cell].z = 'h:mm';\n    }\n  }\n\n  // Create workbook\n  const wb = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(wb, ws, \"Crew Time Report\");\n  return wb;\n}\n\n// Add deep comparison utility\nfunction deepEqual(obj1: any, obj2: any): boolean {\n  if (obj1 === obj2) return true;\n  if (typeof obj1 !== 'object' || obj1 === null || typeof obj2 !== 'object' || obj2 === null) {\n    return false;\n  }\n  \n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  \n  if (keys1.length !== keys2.length) return false;\n  \n  for (const key of keys1) {\n    if (!keys2.includes(key)) return false;\n    if (!deepEqual(obj1[key], obj2[key])) return false;\n  }\n  \n  return true;\n}\n\nexport default function MainTable() {\n  const [data, setData] = useState<CrewMember[]>(() => {\n    const loadedData = loadData();\n    return Array.isArray(loadedData) ? loadedData : defaultData;\n  });\n  \n  const [dayCount, setDayCount] = useState(() => {\n    return data[0]?.days?.length || 2;\n  });\n  \n  const [days, setDays] = useState<string[]>(() => {\n    const loadedDates = data[0]?.days?.map(d => d.date);\n    return Array.isArray(loadedDates) && loadedDates.length === 2 ? loadedDates : ['', ''];\n  });\n  const [showSaveDefault, setShowSaveDefault] = useState(false);\n  const [crewInfo, setCrewInfo] = useState<CrewInfo>({\n    crewName: '',\n    crewNumber: '',\n    fireName: '',\n    fireNumber: ''\n  });\n  const [editingCell, setEditingCell] = useState<EditingCell | null>(null);\n  const [lastTap, setLastTap] = useState<number>(0);\n  const [savedDates, setSavedDates] = useState<string[]>([]);\n  const [selectedDate, setSelectedDate] = useState<string>('');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [notification, setNotification] = useState<NotificationState>({\n    message: '',\n    type: 'info',\n    show: false\n  });\n\n  // Add state to track last saved version\n  const [lastSavedState, setLastSavedState] = useState({\n    data: data,\n    crewInfo: crewInfo,\n    days: days\n  });\n\n  const [currentDateIndex, setCurrentDateIndex] = useState<number>(-1);\n\n  // Calculate total hours whenever data changes\n  const totalHours = calculateTotalHours(data);\n\n  // Add state to track last saved version\n  const [lastSavedTotalHours, setLastSavedTotalHours] = useState(0);\n\n  // Add state to track last saved crew info\n  const [lastSavedCrewInfo, setLastSavedCrewInfo] = useState<CrewInfo>({\n    crewName: '',\n    crewNumber: '',\n    fireName: '',\n    fireNumber: ''\n  });\n\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [showCustomDatePicker, setShowCustomDatePicker] = useState<number | null>(null);\n\n  // Load saved dates on component mount\n  useEffect(() => {\n    loadSavedDates();\n  }, []);\n\n  // Update lastSavedState when data is loaded\n  useEffect(() => {\n    setLastSavedState({\n      data: [...data],\n      crewInfo: { ...crewInfo },\n      days: [...days]\n    });\n  }, []);\n\n  // Update lastSavedTotalHours when data is loaded\n  useEffect(() => {\n    setLastSavedTotalHours(totalHours);\n  }, []);\n\n  // Replace the existing useEffect for change tracking\n  useEffect(() => {\n    // Check if we have all required crew info\n    const hasCrewInfo = Boolean(\n      crewInfo.crewName && \n      crewInfo.crewNumber && \n      crewInfo.fireName && \n      crewInfo.fireNumber\n    );\n\n    // Check if we have both dates\n    const hasDates = Boolean(days[0] && days[1]);\n\n    // Check if total hours have changed\n    const hoursChanged = Math.abs(totalHours - lastSavedTotalHours) > 0.01;\n\n    // Check if crew info has changed\n    const crewInfoChanged = Boolean(\n      crewInfo.crewName !== lastSavedCrewInfo.crewName ||\n      crewInfo.crewNumber !== lastSavedCrewInfo.crewNumber ||\n      crewInfo.fireName !== lastSavedCrewInfo.fireName ||\n      crewInfo.fireNumber !== lastSavedCrewInfo.fireNumber\n    );\n\n    // Only set hasUnsavedChanges if we have required fields and either hours or crew info changed\n    const hasChanges = Boolean(\n      (hoursChanged || crewInfoChanged) && \n      hasCrewInfo && \n      hasDates\n    );\n\n    setHasUnsavedChanges(hasChanges);\n  }, [totalHours, crewInfo, days, lastSavedTotalHours, lastSavedCrewInfo]);\n\n  const loadSavedDates = async () => {\n    try {\n      const dateRanges = await ctrDataService.getAllDateRanges();\n      setSavedDates(dateRanges);\n    } catch (error) {\n      console.error('Error loading saved dates:', error);\n    }\n  };\n\n  const showNotification = (message: string, type: 'success' | 'info' | 'warning' | 'error') => {\n    setNotification({ message, type, show: true });\n  };\n\n  const hideNotification = () => {\n    setNotification(prev => ({ ...prev, show: false }));\n  };\n\n  const handleSave = async () => {\n    if (!days[0] || !days[1]) {\n      showNotification('Please select both dates before saving.', 'warning');\n      return;\n    }\n    try {\n      const date1 = days[0];\n      const date2 = days[1];\n      await ctrDataService.saveRecord(date1, date2, data, crewInfo);\n      await loadSavedDates();\n      \n      // Update lastSavedTotalHours and lastSavedCrewInfo after successful save\n      setLastSavedTotalHours(totalHours);\n      setLastSavedCrewInfo({ ...crewInfo });\n      \n      setHasUnsavedChanges(false);\n      showNotification('Data saved successfully!', 'success');\n    } catch (error) {\n      console.error('Error saving data:', error);\n      showNotification('Failed to save data. Please try again.', 'error');\n    }\n  };\n\n  const findCurrentDateIndex = () => {\n    if (!selectedDate) return -1;\n    return savedDates.findIndex(date => date === selectedDate);\n  };\n\n  const handlePreviousEntry = async () => {\n    const currentIndex = findCurrentDateIndex();\n    if (currentIndex > 0) {\n      const prevDateRange = savedDates[currentIndex - 1];\n      // Reset unsaved changes state before loading new data\n      setHasUnsavedChanges(false);\n      await handleDateSelect(prevDateRange);\n    }\n  };\n\n  const handleNextEntry = async () => {\n    const currentIndex = findCurrentDateIndex();\n    if (currentIndex < savedDates.length - 1) {\n      const nextDateRange = savedDates[currentIndex + 1];\n      // Reset unsaved changes state before loading new data\n      setHasUnsavedChanges(false);\n      await handleDateSelect(nextDateRange);\n    }\n  };\n\n  const handleDateSelect = async (dateRange: string) => {\n    if (dateRange === \"new\") {\n      if (hasUnsavedChanges) {\n        showNotification('You have unsaved changes. Please save or discard them before starting a new entry.', 'warning');\n        return;\n      }\n      setData(defaultData);\n      setCrewInfo({\n        crewName: '',\n        crewNumber: '',\n        fireName: '',\n        fireNumber: ''\n      });\n      setDays(['', '']);\n      setSelectedDate('');\n      setCurrentDateIndex(-1);\n      setHasUnsavedChanges(false);\n      setLastSavedTotalHours(0);\n      setLastSavedCrewInfo({\n        crewName: '',\n        crewNumber: '',\n        fireName: '',\n        fireNumber: ''\n      });\n      showNotification('New entry started', 'info');\n      return;\n    }\n\n    if (hasUnsavedChanges) {\n      showNotification('You have unsaved changes. Please save or discard them before loading another date range.', 'warning');\n      return;\n    }\n\n    try {\n      const record = await ctrDataService.getRecord(dateRange);\n      if (record) {\n        setData(record.data);\n        setCrewInfo(record.crewInfo);\n        const [date1, date2] = record.dateRange.split(' to ');\n        setDays([date1, date2]);\n        setSelectedDate(dateRange);\n        setCurrentDateIndex(savedDates.indexOf(dateRange));\n        setHasUnsavedChanges(false);\n        \n        // Update lastSavedTotalHours and lastSavedCrewInfo with the loaded data\n        const loadedTotalHours = calculateTotalHours(record.data);\n        setLastSavedTotalHours(loadedTotalHours);\n        setLastSavedCrewInfo({ ...record.crewInfo });\n        \n        showNotification('Data loaded successfully', 'success');\n      }\n    } catch (error) {\n      console.error('Error loading selected date range:', error);\n      showNotification('Failed to load data. Please try again.', 'error');\n    }\n  };\n\n  useEffect(() => {\n    saveData(data);\n  }, [data]);\n\n  const handleCellDoubleTap = (rowIdx: number, field: string, dayIdx?: number) => {\n    const now = Date.now();\n    if (now - lastTap < 300) { // Double tap detected\n      setEditingCell({ row: rowIdx, field, dayIdx });\n    }\n    setLastTap(now);\n  };\n\n  const handleCellDoubleClick = (rowIdx: number, field: string, dayIdx?: number) => {\n    setEditingCell({ row: rowIdx, field, dayIdx });\n  };\n\n  const validateMilitaryTime = (value: string): boolean => {\n    if (!value) return true;\n    \n    // Must be exactly 4 digits\n    if (value.length > 4) return false;\n    \n    // Convert to array of digits\n    const digits = value.split('').map(Number);\n    \n    // First digit must be 0-2\n    if (digits[0] > 2) return false;\n    \n    // Second digit rules based on first digit\n    if (digits[0] === 2 && digits[1] > 3) return false;\n    \n    // Third digit must be 0-5\n    if (digits[2] > 5) return false;\n    \n    return true;\n  };\n\n  const copyFFTTimes = () => {\n    // Find the first FFT1 or FFT2 entry\n    const fftIndex = data.findIndex(member => \n      member.classification?.toUpperCase().includes('FFT1') || \n      member.classification?.toUpperCase().includes('FFT2')\n    );\n\n    if (fftIndex === -1) {\n      alert('Please enter an FFT1 or FFT2 classification first.');\n      return;\n    }\n\n    if (!data[fftIndex].name) {\n      alert('Please enter the FFT name first.');\n      return;\n    }\n\n    const fftTimes = data[fftIndex].days;\n    const newData = data.map((member, index) => {\n      if (index <= fftIndex) return member; // Skip crew boss and FFT\n      return {\n        ...member,\n        days: fftTimes.map(day => ({ ...day }))\n      };\n    });\n\n    setData(newData);\n    setHasUnsavedChanges(true);\n  };\n\n  const handleCellEdit = (e: React.ChangeEvent<HTMLInputElement>, rowIdx: number, field: string, dayIdx?: number) => {\n    const { value } = e.target;\n    \n    // Validate military time for on/off fields\n    if ((field === 'on' || field === 'off')) {\n      // Only allow digits\n      if (!/^\\d*$/.test(value)) return;\n      \n      // Apply validation rules\n      if (!validateMilitaryTime(value)) return;\n    }\n\n    const newData = [...data];\n    \n    // Ensure the row exists and has the required structure\n    if (!newData[rowIdx]) {\n      newData[rowIdx] = {\n        name: '',\n        classification: '',\n        days: days.map(date => ({ date, on: '', off: '' }))\n      };\n    }\n    \n    // Ensure days array exists\n    if (!newData[rowIdx].days) {\n      newData[rowIdx].days = days.map(date => ({ date, on: '', off: '' }));\n    }\n    \n    if (dayIdx !== undefined) {\n      // Ensure the day object exists\n      if (!newData[rowIdx].days[dayIdx]) {\n        newData[rowIdx].days[dayIdx] = { date: days[dayIdx] || '', on: '', off: '' };\n      }\n      newData[rowIdx].days[dayIdx][field as keyof Day] = value;\n\n      // If this is the second row (index 1) and we're editing ON/OFF times\n      if (rowIdx === 1) {\n        // Copy these times to all subsequent rows that have names\n        for (let i = 2; i < newData.length; i++) {\n          if (newData[i]?.name) {\n            if (!newData[i].days[dayIdx]) {\n              newData[i].days[dayIdx] = { date: days[dayIdx] || '', on: '', off: '' };\n            }\n            newData[i].days[dayIdx][field as keyof Day] = value;\n          }\n        }\n      }\n    } else {\n      (newData[rowIdx] as any)[field] = value;\n\n      // If this is a name field and it's not the first FFT1/FFT2, copy their times\n      if (field === 'name' && value) {\n        const fftIndex = newData.findIndex(member => \n          member?.classification?.toUpperCase().includes('FFT1') || \n          member?.classification?.toUpperCase().includes('FFT2')\n        );\n\n        if (fftIndex !== -1 && rowIdx > fftIndex && newData[fftIndex]?.days) {\n          const fftTimes = newData[fftIndex].days;\n          newData[rowIdx].days = fftTimes.map(day => ({ ...day }));\n        }\n      }\n    }\n    \n    setData(newData);\n    setHasUnsavedChanges(true);\n  };\n\n  const handleCellBlur = () => {\n    setTimeout(() => {\n      setEditingCell(null);\n    }, 200);\n  };\n\n  const handleDelete = (idx: number) => {\n    const newData = data.filter((_, i) => i !== idx);\n    setData(newData);\n  };\n\n  const handleHeaderDateChange = (e: React.ChangeEvent<HTMLInputElement>, idx: number) => {\n    const newDate = e.target.value;\n    setDays(prev => prev.map((d, i) => (i === idx ? newDate : d)));\n    setData(data => data.map(row => ({\n      ...row,\n      days: row.days.map((day, i) => i === idx ? { ...day, date: newDate } : day)\n    })));\n    setHasUnsavedChanges(true);\n  };\n\n  const handleResetToDefault = () => {\n    setData(defaultData);\n    saveData(defaultData);\n    setShowSaveDefault(false);\n    showNotification('Restored to original default data!', 'info');\n  };\n\n  const handleSaveDefault = () => {\n    saveData(data);\n    setShowSaveDefault(false);\n    showNotification('Current table saved as default!', 'success');\n  };\n\n  const handleExportExcel = async () => {\n    try {\n      // Validate required data before attempting Excel generation\n      if (!days[0] || !days[1]) {\n        showNotification('Please select both dates before generating Excel.', 'warning');\n        return;\n      }\n\n      if (!crewInfo.crewNumber || !crewInfo.fireName || !crewInfo.fireNumber) {\n        showNotification('Please fill in all crew and fire information before generating Excel.', 'warning');\n        return;\n      }\n\n      // Check if there's any crew member data\n      const hasCrewData = data.some(member => \n        member.name && member.classification && \n        member.days.some(day => day.on || day.off)\n      );\n\n      if (!hasCrewData) {\n        showNotification('Please enter at least one crew member\\'s information before generating Excel.', 'warning');\n        return;\n      }\n\n      showNotification('Generating Excel...', 'info');\n      \n      const wb = await fillExcelTemplate(data, crewInfo, days, '/CTR_Template.xlsx');\n      XLSX.writeFile(wb, generateExportFilename({\n        date: days[0],\n        crewNumber: crewInfo.crewNumber,\n        fireName: crewInfo.fireName,\n        fireNumber: crewInfo.fireNumber,\n        type: 'Excel'\n      }));\n      showNotification('Excel file generated successfully!', 'success');\n    } catch (error) {\n      console.error('Error generating Excel:', error);\n      let errorMessage = 'Failed to generate Excel file. ';\n      \n      if (error instanceof Error) {\n        if (error.message.includes('network') || error.message.includes('fetch')) {\n          errorMessage += 'Please check your internet connection and try again.';\n        } else if (error.message.includes('template')) {\n          errorMessage += 'The Excel template could not be loaded. Please try refreshing the page.';\n        } else {\n          errorMessage += 'An unexpected error occurred. Please try again.';\n        }\n      }\n      \n      showNotification(errorMessage, 'error');\n    }\n  };\n\n  const handleExportPDF = async () => {\n    try {\n      // Validate required data before attempting PDF generation\n      if (!days[0] || !days[1]) {\n        showNotification('Please select both dates before generating PDF.', 'warning');\n        return;\n      }\n\n      if (!crewInfo.crewNumber || !crewInfo.fireName || !crewInfo.fireNumber) {\n        showNotification('Please fill in all crew and fire information before generating PDF.', 'warning');\n        return;\n      }\n\n      // Check if there's any crew member data\n      const hasCrewData = data.some(member => \n        member.name && member.classification && \n        member.days.some(day => day.on || day.off)\n      );\n\n      if (!hasCrewData) {\n        showNotification('Please enter at least one crew member\\'s information before generating PDF.', 'warning');\n        return;\n      }\n\n      showNotification('Generating PDF...', 'info');\n      \n      try {\n        await fillCTRPDF(data, crewInfo, undefined);\n        showNotification('PDF generated successfully!', 'success');\n      } catch (error) {\n        // error handling\n        console.error('Error generating PDF:', error);\n        let errorMessage = 'Failed to generate PDF. ';\n        \n        if (error instanceof Error) {\n          if (error.message.includes('network') || error.message.includes('fetch')) {\n            errorMessage += 'Please check your internet connection and try again.';\n          } else if (error.message.includes('cache')) {\n            errorMessage += 'The PDF template could not be loaded. Please try refreshing the page.';\n          } else {\n            errorMessage += 'An unexpected error occurred. Please try again.';\n          }\n        }\n        \n        showNotification(errorMessage, 'error');\n      }\n    } catch (error) {\n      console.error('Error in PDF generation process:', error);\n      showNotification('An unexpected error occurred while preparing the PDF.', 'error');\n    }\n  };\n\n  const handleExcelUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      try {\n        const data = evt.target?.result;\n        const workbook = XLSX.read(data, { type: 'binary' });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        \n        // Use the mapping utility to extract data\n        const { crewInfo: importedCrewInfo, crewMembers } = mapExcelToData(worksheet);\n        \n        // Update the application state\n        setCrewInfo(importedCrewInfo);\n        setData(crewMembers);\n        \n        // Extract dates from the first crew member's days\n        if (crewMembers.length > 0) {\n          const dates = crewMembers[0].days.map(d => d.date);\n          setDays(dates);\n          setDayCount(dates.length);\n        }\n        \n        setShowSaveDefault(true);\n        showNotification('Excel file imported successfully', 'success');\n      } catch (error) {\n        console.error('Error importing Excel file:', error);\n        showNotification('Error importing Excel file. Please check the file format.', 'error');\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const handleCopyToNextDay = async () => {\n    if (!days[0] || !days[1]) {\n      showNotification('Please set both dates before copying to next days.', 'warning');\n      return;\n    }\n\n    // Validate that we have crew data\n    const hasCrewData = data.some(member => \n      member.name && member.classification\n    );\n\n    if (!hasCrewData) {\n      showNotification('Please enter crew information before copying to next days.', 'warning');\n      return;\n    }\n\n    try {\n      showNotification('Copying data to next 20 days...', 'info');\n      \n      // Get the base dates\n      const startDate = new Date(days[0]);\n      const endDate = new Date(days[1]);\n      const daysDiff = Math.ceil((endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24));\n\n      // Copy data for next 20 days\n      for (let i = 0; i < 20; i++) {\n        // Calculate new date range starting from the day after date2\n        const newStartDate = new Date(endDate);\n        newStartDate.setDate(newStartDate.getDate() + 1 + (i * (daysDiff + 1)));\n        \n        const newEndDate = new Date(newStartDate);\n        newEndDate.setDate(newEndDate.getDate() + daysDiff);\n\n        const newStartDateStr = newStartDate.toISOString().split('T')[0];\n        const newEndDateStr = newEndDate.toISOString().split('T')[0];\n\n        // Create new data with updated dates but empty time entries\n        const newData = data.map(member => ({\n          name: member.name,\n          classification: member.classification,\n          days: [\n            { date: newStartDateStr, on: '', off: '' },\n            { date: newEndDateStr, on: '', off: '' }\n          ]\n        }));\n\n        // Save the new date range\n        await ctrDataService.saveRecord(newStartDateStr, newEndDateStr, newData, crewInfo);\n      }\n\n      // Reload saved dates\n      await loadSavedDates();\n      setCurrentDateIndex(findCurrentDateIndex());\n      showNotification('Successfully copied crew information to next 20 days!', 'success');\n    } catch (error) {\n      console.error('Error copying data to next days:', error);\n      showNotification('Failed to copy data to next days. Please try again.', 'error');\n    }\n  };\n\n  const handleRemoveEntry = async () => {\n    if (!selectedDate) {\n      showNotification('Please select a date range to remove.', 'warning');\n      return;\n    }\n\n    if (hasUnsavedChanges) {\n      showNotification('Please save or discard your changes before removing an entry.', 'warning');\n      return;\n    }\n\n    try {\n      await ctrDataService.deleteRecord(selectedDate);\n      await loadSavedDates();\n      setSelectedDate('');\n      setCurrentDateIndex(-1);\n      setData(defaultData);\n      setCrewInfo({\n        crewName: '',\n        crewNumber: '',\n        fireName: '',\n        fireNumber: ''\n      });\n      setDays(['', '']);\n      showNotification('Entry removed successfully', 'success');\n    } catch (error) {\n      console.error('Error removing entry:', error);\n      showNotification('Failed to remove entry. Please try again.', 'error');\n    }\n  };\n\n  return (\n    <div className=\"ctr-container\">\n      {notification.show && (\n        <Notification\n          message={notification.message}\n          type={notification.type}\n          onClose={hideNotification}\n        />\n      )}\n      <h2 className=\"ctr-title\">Crew Time Report Table</h2>\n      \n      {/* Date Selection and Save Controls */}\n      <div className=\"ctr-date-controls\">\n        <div className=\"ctr-date-selector\">\n          <select \n            value={selectedDate}\n            onChange={(e) => handleDateSelect(e.target.value)}\n            className=\"ctr-select\"\n          >\n            <option value=\"new\">New Entry</option>\n            <option value=\"\">Select a saved date range...</option>\n            {savedDates.map(dateRange => {\n              const [date1, date2] = dateRange.split(' to ');\n              return (\n                <option key={dateRange} value={dateRange}>\n                  {date1} to {date2}\n                </option>\n              );\n            })}\n          </select>\n          <button \n            className=\"ctr-btn calendar-btn\"\n            onClick={() => setShowCalendar(true)}\n            title=\"Open Calendar View\"\n          >\n            📅\n          </button>\n        </div>\n        <div className=\"ctr-navigation-buttons\">\n          <button \n            className=\"ctr-btn nav-btn\" \n            onClick={handlePreviousEntry}\n            disabled={currentDateIndex <= 0}\n          >\n            ← Previous\n          </button>\n          <button \n            className=\"ctr-btn nav-btn\" \n            onClick={handleNextEntry}\n            disabled={currentDateIndex >= savedDates.length - 1}\n          >\n            Next →\n          </button>\n        </div>\n        <button \n          className=\"ctr-btn copy-btn\" \n          onClick={handleCopyToNextDay}\n          disabled={!days[1]}\n        >\n          Copy to Next 20 Days\n        </button>\n        <button \n          className=\"ctr-btn save-btn\" \n          onClick={handleSave}\n          disabled={!hasUnsavedChanges || !days[0] || !days[1]}\n        >\n          {hasUnsavedChanges ? 'Save Changes' : 'Saved'}\n        </button>\n      </div>\n\n      <div className=\"ctr-crew-info-form\">\n        <input\n          className=\"ctr-input\"\n          placeholder=\"Crew Name\"\n          value={crewInfo.crewName}\n          onChange={e => setCrewInfo({ ...crewInfo, crewName: e.target.value })}\n        />\n        <input\n          className=\"ctr-input\"\n          placeholder=\"Crew Number\"\n          value={crewInfo.crewNumber}\n          onChange={e => setCrewInfo({ ...crewInfo, crewNumber: e.target.value })}\n        />\n        <input\n          className=\"ctr-input\"\n          placeholder=\"Fire Name\"\n          value={crewInfo.fireName}\n          onChange={e => setCrewInfo({ ...crewInfo, fireName: e.target.value })}\n        />\n        <input\n          className=\"ctr-input\"\n          placeholder=\"Fire Number\"\n          value={crewInfo.fireNumber}\n          onChange={e => setCrewInfo({ ...crewInfo, fireNumber: e.target.value })}\n        />\n      </div>\n      <div className=\"ctr-actions\">\n        <input type=\"file\" accept=\".xlsx\" onChange={handleExcelUpload} />\n        <button className=\"ctr-btn\" onClick={handleExportExcel}>Export Excel</button>\n        <button className=\"ctr-btn\" onClick={handleExportPDF}>Export to PDF</button>\n        {showSaveDefault && (\n          <button className=\"ctr-btn\" onClick={handleSaveDefault} style={{ background: '#388e3c' }}>Save as Default</button>\n        )}\n        <button className=\"ctr-btn\" onClick={handleResetToDefault} style={{ background: '#888' }}>Reset to Default</button>\n        <button \n          className=\"ctr-btn\" \n          onClick={handleRemoveEntry}\n          disabled={!selectedDate}\n          style={{ background: '#d32f2f' }}\n        >\n          Remove Entry\n        </button>\n      </div>\n      <div style={{ overflowX: 'auto', maxWidth: '100%' }}>\n        <table className=\"ctr-table\">\n          <thead>\n            <tr>\n              <th className=\"ctr-th name\" rowSpan={2}>NAME</th>\n              <th className=\"ctr-th class\" rowSpan={2}>CLASS</th>\n              {days.map((date, i) => (\n                <th className=\"ctr-th date\" colSpan={2} key={i} style={{ textAlign: 'center' }}>\n                  DATE<br />\n                  <input\n                    className=\"ctr-input ctr-date\"\n                    type=\"date\"\n                    value={date}\n                    onChange={e => handleHeaderDateChange(e, i)}\n                    style={{ fontWeight: 'bold', fontSize: 14, textAlign: 'center', background: 'transparent', border: 'none', borderBottom: '1.5px solid #d32f2f' }}\n                  />\n                </th>\n              ))}\n              <th className=\"ctr-th\" rowSpan={2}></th>\n            </tr>\n            <tr>\n              {days.map((_, i) => (\n                <React.Fragment key={i}>\n                  <th className=\"ctr-th\">ON</th>\n                  <th className=\"ctr-th\">OFF</th>\n                </React.Fragment>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {Array.from({ length: 20 }).map((_, idx) => {\n              const row = data[idx] || {\n                name: '',\n                classification: '',\n                days: days.map(date => ({ date, on: '', off: '' }))\n              };\n              \n              return (\n                <tr key={idx} className=\"ctr-tr\">\n                  <td className=\"ctr-td\">\n                    {editingCell?.row === idx && editingCell?.field === 'name' ? (\n                      <input\n                        className=\"ctr-input\"\n                        value={row.name || ''}\n                        onChange={e => handleCellEdit(e, idx, 'name')}\n                        onBlur={handleCellBlur}\n                        autoFocus\n                      />\n                    ) : (\n                      <div \n                        className=\"ctr-cell-content\"\n                        onDoubleClick={() => handleCellDoubleClick(idx, 'name')}\n                        onTouchStart={() => handleCellDoubleTap(idx, 'name')}\n                      >\n                        {row.name || ''}\n                      </div>\n                    )}\n                  </td>\n                  <td className=\"ctr-td\">\n                    {editingCell?.row === idx && editingCell?.field === 'classification' ? (\n                      <input\n                        className=\"ctr-input\"\n                        value={row.classification}\n                        onChange={e => handleCellEdit(e, idx, 'classification')}\n                        onBlur={handleCellBlur}\n                        autoFocus\n                      />\n                    ) : (\n                      <div \n                        className=\"ctr-cell-content\"\n                        onDoubleClick={() => handleCellDoubleClick(idx, 'classification')}\n                        onTouchStart={() => handleCellDoubleTap(idx, 'classification')}\n                      >\n                        {row.classification}\n                      </div>\n                    )}\n                  </td>\n                  {row.days.map((day, dayIdx) => (\n                    <React.Fragment key={dayIdx}>\n                      <td className=\"ctr-td\">\n                        {editingCell?.row === idx && editingCell?.field === 'on' && editingCell?.dayIdx === dayIdx ? (\n                          <input\n                            className=\"ctr-input ctr-on\"\n                            value={day.on}\n                            onChange={e => handleCellEdit(e, idx, 'on', dayIdx)}\n                            onBlur={handleCellBlur}\n                            autoFocus\n                            placeholder=\"HHMM\"\n                            maxLength={4}\n                            inputMode=\"numeric\"\n                            pattern=\"[0-9]*\"\n                          />\n                        ) : (\n                          <div \n                            className=\"ctr-cell-content\"\n                            onDoubleClick={() => handleCellDoubleClick(idx, 'on', dayIdx)}\n                            onTouchStart={() => handleCellDoubleTap(idx, 'on', dayIdx)}\n                          >\n                            {day.on}\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"ctr-td\">\n                        {editingCell?.row === idx && editingCell?.field === 'off' && editingCell?.dayIdx === dayIdx ? (\n                          <input\n                            className=\"ctr-input ctr-off\"\n                            value={day.off}\n                            onChange={e => handleCellEdit(e, idx, 'off', dayIdx)}\n                            onBlur={handleCellBlur}\n                            autoFocus\n                            placeholder=\"HHMM\"\n                            maxLength={4}\n                            inputMode=\"numeric\"\n                            pattern=\"[0-9]*\"\n                          />\n                        ) : (\n                          <div \n                            className=\"ctr-cell-content\"\n                            onDoubleClick={() => handleCellDoubleClick(idx, 'off', dayIdx)}\n                            onTouchStart={() => handleCellDoubleTap(idx, 'off', dayIdx)}\n                          >\n                            {day.off}\n                          </div>\n                        )}\n                      </td>\n                    </React.Fragment>\n                  ))}\n                  <td className=\"ctr-td\">\n                    {data[idx] && (\n                      <button \n                        className=\"ctr-btn\" \n                        style={{ background: '#d32f2f', padding: '2px 6px' }} \n                        onClick={() => handleDelete(idx)}\n                      >\n                        ×\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Total Hours Display */}\n      <div className=\"ctr-total-hours\">\n        <div className=\"ctr-total-label\">Total Hours Worked:</div>\n        <div className=\"ctr-total-value\">{totalHours.toFixed(2)}</div>\n      </div>\n\n      {showCalendar && (\n        <DateCalendar\n          savedDates={savedDates}\n          onDateSelect={handleDateSelect}\n          onClose={() => setShowCalendar(false)}\n        />\n      )}\n\n      {showCustomDatePicker !== null && (\n        <div className=\"custom-date-picker\">\n          <input\n            type=\"date\"\n            value={days[showCustomDatePicker]}\n            onChange={(e) => {\n              const newDate = e.target.value;\n              setDays(prev => prev.map((d, i) => (i === showCustomDatePicker ? newDate : d)));\n              setData(data => data.map(row => ({\n                ...row,\n                days: row.days.map((day, i) => i === showCustomDatePicker ? { ...day, date: newDate } : day)\n              })));\n              setHasUnsavedChanges(true);\n              setShowCustomDatePicker(null);\n            }}\n            onBlur={() => setShowCustomDatePicker(null)}\n            autoFocus\n          />\n        </div>\n      )}\n\n      {/* Add StoredPDFs component */}\n      <StoredPDFs />\n    </div>\n  );\n}\n\n// Add these styles to MainTable.css\nconst styles = `\n.ctr-date-selector {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 1rem;\n}\n\n.ctr-select {\n  padding: 0.5rem;\n  font-size: 1rem;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  min-width: 200px;\n  background-color: white;\n}\n\n.ctr-select:focus {\n  outline: none;\n  border-color: #d32f2f;\n}\n\n.calendar-btn {\n  padding: 0.5rem;\n  font-size: 1.2rem;\n  background: none;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.calendar-btn:hover {\n  background-color: #f5f5f5;\n  border-color: #d32f2f;\n}\n\n.ctr-signature-section {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n}\n\n.ctr-signature-display {\n  display: flex;\n  align-items: flex-start;\n  gap: 20px;\n}\n\n.ctr-signature-content {\n  flex: 1;\n}\n\n.ctr-signature-label {\n  color: #666;\n  font-weight: bold;\n  margin-bottom: 8px;\n}\n\n.ctr-signature-name {\n  color: #333;\n  margin-bottom: 12px;\n}\n\n.ctr-signature-image {\n  max-width: 300px;\n  border: 1px solid #ddd;\n  background: white;\n  padding: 10px;\n  border-radius: 4px;\n}\n\n.ctr-signature-image img {\n  width: 100%;\n  height: auto;\n}\n\n.signature-btn, .edit-signature-btn {\n  background: #1976d2;\n  white-space: nowrap;\n}\n\n.signature-btn:hover, .edit-signature-btn:hover {\n  background: #1565c0;\n}\n\n@media (max-width: 768px) {\n  .ctr-signature-section {\n    padding: 10px;\n  }\n\n  .ctr-signature-display {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .ctr-signature-image {\n    max-width: 100%;\n  }\n}\n\n.custom-date-picker {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.custom-date-picker input {\n  font-size: 16px;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.custom-date-picker input:focus {\n  outline: none;\n  border-color: #d32f2f;\n}\n`; ","import React from 'react';\r\nimport MainTable from './components/MainTable';\r\n\r\nexport default function App() {\r\n  return <MainTable />;\r\n} ","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './styles.css';\n\n// Register service worker\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', async () => {\n    try {\n      // Check if there's an existing service worker\n      const existingRegistration = await navigator.serviceWorker.getRegistration();\n      \n      if (existingRegistration) {\n        // If there's an update, wait for it to be installed\n        existingRegistration.addEventListener('updatefound', () => {\n          const newWorker = existingRegistration.installing;\n          if (newWorker) {\n            newWorker.addEventListener('statechange', () => {\n              if (newWorker.state === 'installed') {\n                console.log('New service worker installed, will activate on next load');\n              }\n            });\n          }\n        });\n      } else {\n        // Only register new service worker if none exists\n        const registration = await navigator.serviceWorker.register('./sw.js', {\n          type: 'module',\n          scope: './'\n        });\n        console.log('SW registered: ', registration);\n      }\n    } catch (error) {\n      console.error('SW registration failed: ', error);\n    }\n  });\n} else {\n  console.warn('Service workers are not supported in this browser');\n}\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n); "],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","defaultData","mapToPDFFields","data","crewInfo","signature","fields","_a","_b","row","idx","rowNum","generateExportFilename","info","date","crewNumber","fireName","fireNumber","type","formattedDate","safeCrewNumber","safeFireName","safeFireNumber","filename","instanceOfAny","object","constructors","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","getCursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","resolve","reject","unlisten","success","error","wrap","value","cacheDonePromiseForTransaction","tx","done","complete","idbProxyTraps","target","prop","receiver","replaceTraps","callback","wrapFunction","func","storeNames","args","unwrap","transformCachableValue","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","openPromise","event","db","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","method","storeName","oldTraps","DB_NAME","STORE_NAME","DB_VERSION","initDB","storePDF","pdfBlob","metadata","id","getPDF","pdf","listPDFs","pdfs","deletePDF","fillCTRPDF","pdfUrl","urlWithCacheBust","response","pdfBytes","pdfDoc","PDFDocument","form","field","filledPdfBytes","blob","_d","_c","url","CTR_TEMPLATE_MAPPING","fillExcelTemplate","days","templateUrl","mapping","templateData","workbook","XLSX.read","worksheet","startRow","totalHours","calculateTotalHours","total","day","on","parseMilitaryTime","off","time","CTRDataService","date1","date2","dateRange","ranges","ctrDataService","Notification","props","message","onClose","duration","React","timer","jsxs","jsx","EXCEL_CELL_MAPPING","getMergedCellValue","cellAddress","merges","XLSXUtils","XLSX.utils","merge","topLeft","mapExcelToData","crewMembers","nameCell","crewMember","member","onTime","convertToMinutes","offTime","hours","minutes","match","DateCalendar","savedDates","onDateSelect","currentDate","setCurrentDate","useState","selectedDate","setSelectedDate","calendarDays","setCalendarDays","useEffect","year","month","firstDay","lastDay","daysFromPrevMonth","daysFromNextMonth","i","handlePrevMonth","handleNextMonth","handleDateClick","dateStr","matchingDateRange","range","start","end","isDateSaved","isCurrentMonth","index","StoredPDFs","setPdfs","loading","setLoading","setError","selectedPDF","setSelectedPDF","setPdfUrl","sortField","setSortField","sortDirection","setSortDirection","isDrawing","setIsDrawing","drawingMode","setDrawingMode","canvasSize","setCanvasSize","canvasRef","useRef","contextRef","lastPoint","pdfViewerRef","canvas","context","updateCanvasSize","width","height","resizeObserver","startDrawing","rect","point","getEventPoint","draw","stopDrawing","touch","clearDrawing","saveDrawing","drawingBlob","pdfArrayBuffer","drawingImage","page","modifiedPdfBytes","modifiedPdfBlob","refreshPDFs","storedPDFs","updatedPDF","handleSort","sortedPDFs","comparison","handleOpen","handleClose","handleDownload","handleDelete","Fragment","STORAGE_KEY","saveData","loadData","raw","MainTable","setData","loadedData","dayCount","setDayCount","setDays","loadedDates","showSaveDefault","setShowSaveDefault","setCrewInfo","editingCell","setEditingCell","lastTap","setLastTap","setSavedDates","hasUnsavedChanges","setHasUnsavedChanges","notification","setNotification","lastSavedState","setLastSavedState","currentDateIndex","setCurrentDateIndex","lastSavedTotalHours","setLastSavedTotalHours","lastSavedCrewInfo","setLastSavedCrewInfo","showCalendar","setShowCalendar","showCustomDatePicker","setShowCustomDatePicker","loadSavedDates","hasCrewInfo","hasDates","hoursChanged","crewInfoChanged","dateRanges","showNotification","hideNotification","prev","handleSave","findCurrentDateIndex","handlePreviousEntry","currentIndex","prevDateRange","handleDateSelect","handleNextEntry","nextDateRange","record","loadedTotalHours","handleCellDoubleTap","rowIdx","dayIdx","now","handleCellDoubleClick","validateMilitaryTime","digits","handleCellEdit","newData","fftIndex","fftTimes","handleCellBlur","_","handleHeaderDateChange","newDate","handleResetToDefault","handleSaveDefault","handleExportExcel","wb","XLSX.writeFile","errorMessage","handleExportPDF","handleExcelUpload","file","reader","evt","sheetName","importedCrewInfo","dates","handleCopyToNextDay","startDate","endDate","daysDiff","newStartDate","newEndDate","newStartDateStr","newEndDateStr","handleRemoveEntry","App","existingRegistration","newWorker","registration","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,1,2,6,7]}